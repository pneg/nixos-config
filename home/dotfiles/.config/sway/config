# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term footclient
set $term2 foot
#exec foot --server
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel | xargs swaymsg exec --

# Color scheme (Gruvbox dark) - adapted from https://gist.github.com/daboross/15a54c086b1c20e9ccc8878cdac65838
set $color_bg #282828
set $color_bg1 #3c3836
set $color_bg2 #504945
set $color_bg3 #665c54
set $color_bg4 #7c6f64
set $color_fb #ebdbb2
set $color_aqua #8ec07c
set $color_blue #83a598
set $color_light_bg #fbf1c7
set $color_light_fg #3c3836
set $color_normal_white  #a89984
set $color_bright_white  #ebdbb2
set $color_normal_gray   #282828
set $color_bright_gray   #3c3836
set $color_bright_yellow #d79921
set $color_normal_black  #1d2021
set $color_unused        #ff0000

# Colors                  border        background             text                   indicator            child_border
client.focused            $color_bg2    $color_bg2             $color_bright_white    $color_bright_gray   $color_normal_black
client.focused_inactive   $color_bg1    $color_bg1             $color_normal_white    $color_bright_gray   $color_normal_black
client.unfocused          $color_bg     $color_bg              $color_normal_white    $color_normal_gray   $color_normal_black
client.urgent             $color_bg     $color_light_bg        $color_light_fg $color_unused        $color_unused
client.placeholder        $color_bg     $color_unused          $color_unused          $color_unused        $color_unused

# Font
font JetBrainsMono Nerd Font 10

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/.config/sway/backgrounds/city.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output eDP-1 position 0,280
output 'Acer Technologies EG270 901123123LAJ' position 1280,0
output 'HUN GT-191 Unknown' position 3200,0

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

set $lockcommand swaylock -e -i ~/.config/sway/backgrounds/city.png

#exec swayidle -w \
#          timeout 300 "chayang && $lockcommand" \
#          timeout 600 "systemctl suspend" \
#          before-sleep "$lockcommand"

bindsym --locked $mod+F1 output eDP-1 power toggle
bindsym $mod+F2 exec chayang -d 2 && $lockcommand
bindsym $mod+XF86Sleep exec chayang -d 2 && $lockcommand
bindsym $mod+F3 exec systemctl suspend
bindsym $mod+F4 output * power toggle



### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# rebind capslock to ctrl
input type:keyboard {
    xkb_options ctrl:nocaps
}

# hide cursor
seat seat0 hide_cursor 10000

# cursor theme
seat * xcursor_theme "Capitaine Cursors (Gruvbox)" 32

# clipboard manager
bindsym $mod+c exec 'cliphist list | bemenu --prompt=clipboard | cliphist decode | wl-copy'
bindsym $mod+x exec 'cliphist wipe'

# drawing tablet
input 9580:110:HID_256c:006e_Pen map_to_output 'HUN GT-191 Unknown'

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term2

    # Kill focused window
    bindsym $mod+Shift+q kill
    bindsym $mod+Backspace kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Screenshots:
    # Super+P: Current window
    # Super+Shift+p: Select area
    # Super+Alt+p Current output
    # Super+Ctrl+p Select a window
    bindsym Mod4+p       exec grimshot save active
    bindsym Mod4+Shift+p exec grimshot save area
    bindsym Mod4+Mod1+p  exec grimshot save output
    bindsym Mod4+Ctrl+p  exec grimshot save window

    # Adjust brightness
    bindsym --locked $mod+F5 exec "brightnessctl -n set 5%-"
    bindsym --locked $mod+F6 exec "brightnessctl set +5%"

    # Adjust volume
    bindsym --locked XF86AudioLowerVolume exec "pactl -- set-sink-volume 0 -5%"
    bindsym --locked XF86AudioRaiseVolume exec "pactl -- set-sink-volume 0 +5%"
    bindsym --locked $mod+F8 exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"
    bindsym --locked $mod+F9 exec "pactl -- set-sink-volume 0 -5%"
    bindsym --locked $mod+F10 exec "pactl -- set-sink-volume 0 +5%"

    # Play/pause media
    bindsym --locked XF86AudioPlay exec "playerctl play"
    bindsym --locked XF86AudioPause exec "playerctl pause"

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Disable borders
    default_border none
    #hide_edge_borders smart_no_gaps
    gaps inner 4
    smart_gaps on
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

bar {
    position top
    swaybar_command waybar
}

include /etc/sway/config.d/*
include ~/.config/sway/config.d/*.conf
